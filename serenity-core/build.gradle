import org.apache.tools.ant.filters.*

ext {
    bintrayPackage = 'serenity-core'
}

jar {
    manifest {
        attributes("Implementation-Title": "Serenity Core",
                "Implementation-Version": project.version.toString())
    }
}

//integrationTests {
//    beforeTest { desc, result ->
//        println "Executing test ${desc.name} [${desc.className}]"
//    }
//    afterTest { desc, result ->
//        println "Finished test ${desc.name} [${desc.className}] with result: ${result.resultType}"
//    }
//}
//
//test {
//    afterTest { desc, result ->
//        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
//    }
//}
dependencies {

    compile project(':serenity-report-resources')

    compile "com.google.code.gson:gson:${gsonVersion}"

    compile "commons-codec:commons-codec:${commonsCodecVersion}"
    compile "commons-io:commons-io:${commonsIoVersion}"
    compile 'xml-apis:xml-apis:1.4.01'

    compile("com.opera:operadriver:1.5") {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-remote-driver'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.apache.commons', module: 'commons-exec'
    }

    compile("org.seleniumhq.selenium:selenium-server:$seleniumVersion") {
        exclude group: 'cglib', module: 'cglib-nodep'
        exclude group: 'guava', module: 'guava'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'net.sourceforge.htmlunit', module: 'htmlunit'
        exclude group: 'org.eclipse.jetty.websocket', module: 'websocket-client'
        exclude group: 'org.mortbay.jetty', module: 'servlet-api-2.5'
        exclude group: 'com.codeborne', module: 'phantomjsdriver'
    //    exclude group: 'org.seleniumhq.selenium', module: 'selenium-support'
    }

    compile('com.codeborne:phantomjsdriver:1.3.0') {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-remote-driver'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
    }

    compile("org.seleniumhq.selenium:htmlunit-driver:${htmlunitVersion}") {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-remote-driver'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-support'
        exclude group: 'org.eclipse.jetty.websocket', module: 'websocket-client'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'net.sourceforge.htmlunit', module: 'htmlunit'
    }

    compile('io.appium:java-client:4.0.0') {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-remote-driver'
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-support'
        exclude group: 'cglib', module: 'cglib'
        exclude group: 'junit', module: 'junit'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    compile "org.codehaus.groovy:groovy:${groovyVersion}"

    compile "net.sf.opencsv:opencsv:2.0"
    compile("commons-beanutils:commons-beanutils-core:1.8.3") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    compile("com.googlecode.lambdaj:lambdaj:${lambdajVersion}") {
        exclude group: 'org.hamcrest', module: 'hamcrest-all'
        exclude group: 'cglib', module: 'cglib-nodep'
        exclude group: 'org.objenesis', module: 'objenesis'
    }
    compile "joda-time:joda-time:${jodaTimeVersion}"
    compile "com.thoughtworks.xstream:xstream:${xstreamVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
    compile "commons-collections:commons-collections:${commonsCollectionsVersion}"
    compile "org.freemarker:freemarker:${freemarkerVersion}"
    compile("net.sourceforge.jexcelapi:jxl:2.6.12") {
        exclude group: 'log4j', module: 'log4j'
    }
    compile "org.hamcrest:hamcrest-core:${hamcrestVersion}"
    compile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    compile("net.sourceforge.htmlunit:htmlunit:${htmlunitVersion}") {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'xml-apis', module: 'xml-apis'
        exclude group: 'xalan', module: 'xalan'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.apache.httpcomponents', module: 'httpmime'
    }
    compile('org.apache.httpcomponents:httpclient:4.5.2') {
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    compile('org.apache.httpcomponents:httpmime:4.5.2') {
        exclude group: 'commons-codec', module: 'commons-codec'
    }

    compile("org.fluentlenium:fluentlenium-core:3.0.1") {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'junit', module: 'junit-dep'
    }
    compile "com.jhlabs:filters:2.0.235"
    compile("org.asciidoctor:asciidoctor-java-integration:0.1.4") {
        exclude group: 'com.beust', module: 'jcommander'
    }

    compile 'org.imgscalr:imgscalr-lib:4.2'

    compile "javax.validation:validation-api:1.1.0.Final"
    compile "org.hibernate:hibernate-validator:5.1.1.Final"
    compile "javax.el:javax.el-api:2.2.4"
    compile "org.glassfish.web:javax.el:2.2.4"

    compile "org.objenesis:objenesis:2.1"
    compile "xml-apis:xml-apis:1.4.01"
    compile("xalan:xalan:2.7.2") {
        exclude group: 'xalan', module: 'serializer'
    }
    compile("xalan:serializer:2.7.2") {
        exclude group: 'xml-apis', module: 'xml-apis'
    }

    compile('com.jayway.awaitility:awaitility:1.6.3') {
        exclude group: 'cglib', module: 'cglib-nodep'
    }
    compile "com.typesafe:config:${typesafeConfigVersion}"
    compile('org.jsoup:jsoup:1.9.2') {
        exclude group: 'junit', module: 'junit'
    }
    compile('com.google.jimfs:jimfs:1.0') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile 'es.nitaur.markdown:txtmark:0.16'
    //compile 'org.commonjava.googlecode.markdown4j:markdown4j:2.2-cj-1.1'

    testCompile "junit:junit:${junitVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "org.springframework:spring-context:${springVersion}"
    testCompile "org.springframework:spring-context-support:${springVersion}"

    testCompile project(':serenity-sample-alternative-resources')
    testCompile project(':serenity-test-utils')
    testCompile "org.skyscreamer:jsonassert:1.2.0"
    testCompile("org.jbehave:jbehave:4.0.5") {
        exclude module: 'freemarker'
        exclude module: 'junit'
        exclude module: 'xstream'
    }
}

processResources {
    filter ReplaceTokens, tokens: [
            "application.version": "" + version
    ]
}

task writeNewPom << {
    pom {
        project {
            inceptionYear '2011'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}
